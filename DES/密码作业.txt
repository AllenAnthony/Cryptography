
重写DES算法中的核心函数: long f(unsigned long r, unsigned char subkey[8])
(1) 根据plaintext_32bit_expanded_to_48bit_table这张表, 把r扩展成48位并保存到以下数组内:
    unsigned char plaintext[8]; /* plaintext每个元素的左边2位恒为0, 右边6位用来保存数据 */
    32位转48位的过程要求使用双重循环来做,外循环8次,内循环6次,其中内循环每次只提取1位。
static char plaintext_32bit_expanded_to_48bit_table[48] =
{
   32,  1,  2,  3,  4,  5, //[%] source Bit32->target Bit1 */
    4,  5,  6,  7,  8,  9,
    8,  9, 10, 11, 12, 13,
   12, 13, 14, 15, 16, 17,
   16, 17, 18, 19, 20, 21,
   20, 21, 22, 23, 24, 25,
   24, 25, 26, 27, 28, 29,
   28, 29, 30, 31, 32,  1 
};
(2) 把plaintext中的各个元素与subkey中各个元素异或, 异或后的值保存到plaintext内。该过程
    使用8次循环来做。
(3) 取出plaintext[i]查表sbox[i]得4位数, 循环8次可得8个4位数, 按从左到右顺序合并得32位数。
    其中查sbox的过程必须先把plaintext[i]拆成2位行号4位列号再去查表得4位结果。
(4) 根据sbox_perm_table把步骤(3)所得32位数打乱得返回值rval, 该过程需要使用32次循环来做,
    每次循环提取1位。
程序中除了可以查上述描述中提到的3张表外，不能查其它表，也不可以生成其它表。

为方便测试, f()函数请直接在mydes.c基础上改, 改完后仍旧是mydes.c;
程序的输出结果必须与修改前的程序输出结果一样。

.c源程序及编译出来的.exe请先保存到以"学号姓名"命名的目录内，再把
该目录打包压缩成"学号姓名.rar"，并上传到以下ftp:
ftp://bhhcrypt:bhhcrypt@10.71.45.100/作业02